---
-
  gather_facts: false
  hosts: '{{ hypervisor }}'
  tasks:
    -
      name: Create veth pair
      shell: 'ip link add {{ veth1 }} type veth peer name {{ veth2 }}'
      become: yes
      ignore_errors: yes

    -
      name: Turn veth1 up
      shell: 'ip link set dev {{ veth1 }} up'
      become: yes
      ignore_errors: yes

    -
      name: Add veth1 to bridge
      shell: 'brctl addif {{ bridge_name }} {{ veth1 }}'
      become: yes
      ignore_errors: yes

    -
      name: Fetch the pid of the container
      shell: "docker inspect -f {%raw%}'{{.State.Pid}}'{%endraw%} {{ container }}"
      register: pid
      become: yes
      ignore_errors: yes

    -
      name: Add veth2 to namespace
      shell: 'ip link set dev {{ veth2 }} netns {{ pid.stdout }}'
      become: yes
      ignore_errors: yes

    -
      name: Turn veth2 up
      shell: 'docker exec --privileged {{ container }} ip link set dev {{ veth2 }} up'
      become: yes
      ignore_errors: yes

    - name: Assign ip address to the container interface
      command: "docker exec --privileged {{ container }} ip addr add {{ ip }} dev {{ veth2 }}"
      become: yes
      when: option == "assign_ip"
      ignore_errors: yes

    - name: Run dhclient
      shell: 'docker exec --privileged {{ container }} dhclient {{ veth2 }}'
      become: yes
      when: option == "run_dhclient"
      ignore_errors: yes

    - name: Delete the default route via 172.17.0.1
      shell: 'docker exec --privileged {{ container }} ip route del default via 172.17.0.1'
      become: yes
      when: option2 == "default"
      ignore_errors: yes

    - name: Add default route
      shell: 'docker exec --privileged {{ container }} ip route add default via {{ default_ip }}'
      become: yes
      when: option2 == "default"
      ignore_errors: yes

    - name: Add default route in site namespace
      shell: 'ip netns exec {{ ns_name }} ip route add default via {{ ip2 }}'
      become: yes
      when: option2 == "assign_default"
      ignore_errors: yes

    - name: Get Management IP address
      shell: "docker exec --privileged {{container}} ip a | grep {{ tid }}.0.1 | awk {%raw%} '{print $2}'{%endraw%}"
      become: yes
      ignore_errors: yes
      when: option == "run_dhclient"
